{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\fitpulse\\\\Fitpulse\\\\fitpulse-UI\\\\src\\\\components\\\\TimerWithAlert.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TimerWithAlert() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(120);\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setTimeLeft(prevTime => prevTime - 1);\n    }, 1000);\n\n    // Clear the interval when the component is unmounted or timeLeft reaches 0\n    return () => clearInterval(timer);\n  }, []);\n  useEffect(() => {\n    if (timeLeft === 0) {\n      alert('Time is up!');\n      setTimeLeft(120);\n    }\n  }, [timeLeft]);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time left: \", formatTime(timeLeft)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(TimerWithAlert, \"kEXwlhowDG1l914u5brOCxxy9OI=\");\n_c = TimerWithAlert;\nexport default TimerWithAlert;\nvar _c;\n$RefreshReg$(_c, \"TimerWithAlert\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TimerWithAlert","_s","timeLeft","setTimeLeft","timer","setInterval","prevTime","clearInterval","alert","formatTime","time","minutes","Math","floor","seconds","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/fitpulse/Fitpulse/fitpulse-UI/src/components/TimerWithAlert.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction TimerWithAlert() {\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prevTime) => prevTime - 1);\r\n    }, 1000);\r\n\r\n    // Clear the interval when the component is unmounted or timeLeft reaches 0\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timeLeft === 0) {\r\n      alert('Time is up!');\r\n      setTimeLeft(120)\r\n    }\r\n  }, [timeLeft]);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p>Time left: {formatTime(timeLeft)}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TimerWithAlert;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,GAAG,CAAC;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMO,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BF,WAAW,CAAEG,QAAQ,IAAKA,QAAQ,GAAG,CAAC,CAAC;IACzC,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAMC,aAAa,CAACH,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAENP,SAAS,CAAC,MAAM;IACd,IAAIK,QAAQ,KAAK,CAAC,EAAE;MAClBM,KAAK,CAAC,aAAa,CAAC;MACpBL,WAAW,CAAC,GAAG,CAAC;IAClB;EACF,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAMO,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC,MAAMI,OAAO,GAAGJ,IAAI,GAAG,EAAE;IACzB,OAAQ,GAAEC,OAAQ,IAAGG,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ,EAAC;EAC1D,CAAC;EAED,oBACEf,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAAgB,QAAA,GAAG,aAAW,EAACN,UAAU,CAACP,QAAQ,CAAC;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpC;AAEV;AAAClB,EAAA,CA9BQD,cAAc;AAAAoB,EAAA,GAAdpB,cAAc;AAgCvB,eAAeA,cAAc;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}