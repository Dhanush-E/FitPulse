{"ast":null,"code":"var _jsxFileName = \"C:\\\\Desktop\\\\fitpulse\\\\Fitpulse\\\\fitpulse-UI\\\\src\\\\components\\\\OTPTimer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OTPTimer() {\n  _s();\n  const [timeLeft, setTimeLeft] = useState(120);\n  const formatTime = time => {\n    const minutes = Math.floor(time / 60);\n    const seconds = time % 60;\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\n  };\n  const tick = () => {\n    if (timeLeft > 0) {\n      setTimeLeft(timeLeft - 1);\n    }\n  };\n\n  // Call tick() function every second to update the time left\n  setInterval(tick, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: timeLeft > 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"OTP expires in \", formatTime(timeLeft), \" minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"OTP has expired\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(OTPTimer, \"k1flV4ISCFP2bUmgTLzygUCQDfE=\");\n_c = OTPTimer;\nexport default OTPTimer;\nvar _c;\n$RefreshReg$(_c, \"OTPTimer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","OTPTimer","_s","timeLeft","setTimeLeft","formatTime","time","minutes","Math","floor","seconds","tick","setInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Desktop/fitpulse/Fitpulse/fitpulse-UI/src/components/OTPTimer.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction OTPTimer() {\r\n  const [timeLeft, setTimeLeft] = useState(120);\r\n\r\n  const formatTime = (time) => {\r\n    const minutes = Math.floor(time / 60);\r\n    const seconds = time % 60;\r\n    return `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;\r\n  }\r\n\r\n  const tick = () => {\r\n    if (timeLeft > 0) {\r\n      setTimeLeft(timeLeft - 1);\r\n    }\r\n  }\r\n\r\n  // Call tick() function every second to update the time left\r\n  setInterval(tick, 1000);\r\n\r\n  return (\r\n    <div>\r\n      {timeLeft > 0 ? (\r\n        <p>OTP expires in {formatTime(timeLeft)} minutes</p>\r\n      ) : (\r\n        <p>OTP has expired</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OTPTimer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,GAAG,CAAC;EAE7C,MAAMO,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,GAAG,EAAE,CAAC;IACrC,MAAMI,OAAO,GAAGJ,IAAI,GAAG,EAAE;IACzB,OAAQ,GAAEC,OAAQ,IAAGG,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAG,GAAEA,OAAQ,EAAC;EAC1D,CAAC;EAED,MAAMC,IAAI,GAAGA,CAAA,KAAM;IACjB,IAAIR,QAAQ,GAAG,CAAC,EAAE;MAChBC,WAAW,CAACD,QAAQ,GAAG,CAAC,CAAC;IAC3B;EACF,CAAC;;EAED;EACAS,WAAW,CAACD,IAAI,EAAE,IAAI,CAAC;EAEvB,oBACEX,OAAA;IAAAa,QAAA,EACGV,QAAQ,GAAG,CAAC,gBACXH,OAAA;MAAAa,QAAA,GAAG,iBAAe,EAACR,UAAU,CAACF,QAAQ,CAAC,EAAC,UAAQ;IAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,gBAEpDjB,OAAA;MAAAa,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACnB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAACf,EAAA,CA3BQD,QAAQ;AAAAiB,EAAA,GAARjB,QAAQ;AA6BjB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}